import { CommandOperation, CommandOperationOptions, OperationParent } from './command';
import { Callback } from '../utils';
import type { Server } from '../sdam/server';
import type { Document } from '../bson';
import type { ClientSession } from '../sessions';
/** @public */
export declare type RunCommandOptions = CommandOperationOptions;
/** @internal */
export declare class RunCommandOperation<T = Document> extends CommandOperation<T> {
    options: RunCommandOptions;
    command: Document;
    constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions);
    execute(server: Server, session: ClientSession, callback: Callback): void;
}
export declare class RunAdminCommandOperation<T = Document> extends RunCommandOperation<T> {
    constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions);
}
//# sourceMappingURL=run_command.d.ts.map