import { AbstractOperation, OperationOptions } from './operation';
import { Collection } from '../collection';
import type { Callback } from '../utils';
import type { Db } from '../db';
import type { Server } from '../sdam/server';
import type { ClientSession } from '../sessions';
export interface CollectionsOptions extends OperationOptions {
    nameOnly?: boolean;
}
/** @internal */
export declare class CollectionsOperation extends AbstractOperation<Collection[]> {
    options: CollectionsOptions;
    db: Db;
    constructor(db: Db, options: CollectionsOptions);
    execute(server: Server, session: ClientSession, callback: Callback<Collection[]>): void;
}
//# sourceMappingURL=collections.d.ts.map