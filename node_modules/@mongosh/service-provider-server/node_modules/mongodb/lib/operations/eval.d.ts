import { CommandOperation, CommandOperationOptions } from './command';
import { Code, Document } from '../bson';
import type { Callback } from '../utils';
import type { Server } from '../sdam/server';
import type { Db } from '../db';
import type { Collection } from '../collection';
import type { ClientSession } from '../sessions';
/** @public */
export interface EvalOptions extends CommandOperationOptions {
    nolock?: boolean;
}
/** @internal */
export declare class EvalOperation extends CommandOperation<Document> {
    options: EvalOptions;
    code: Code;
    parameters?: Document | Document[];
    constructor(db: Db | Collection, code: Code, parameters?: Document | Document[], options?: EvalOptions);
    execute(server: Server, session: ClientSession, callback: Callback<Document>): void;
}
//# sourceMappingURL=eval.d.ts.map